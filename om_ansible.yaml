---
- name: "General tasks on all servers"
  hosts: all
  become: yes
  gather_facts: no
  vars_files:
    - vars/om-install-vars.yaml
  tasks:
    - name: "Modifying /etc/hosts"
      template: 
        src="files/hosts"
        dest="/etc/hosts"
        owner=root 
        group=root 
        mode="u=rw,g=r,o=r"
      when: vms
    - name: Create directory for certificates over all hosts
      file:
        path: /certs
        state: directory
    - name: Set Ops Manager URL for http
      set_fact:
        om_url: "http://omserver:8080"
      when: not om_https
    - name: Set Ops Manager URL for https
      set_fact:
        om_url: "https://omserver:8443"
      when: om_https

- name: "Generating SSL certificates"
  hosts: localhost # Runs on the provisioner and later distributes certs
  become: yes
  gather_facts: no
  tasks:
    - name: "Creating PEM files"
      include: tasks/ssl-creation.yaml

- name: "Distributing CA on all hosts"
  hosts: all 
  become: yes
  gather_facts: no
  tasks:
    - name: "Moving ca.pem into /certs"
      copy:
        src="files/ssl/ca.pem"
        dest="/certs"
        owner=root
        group=root
        mode="u=rw,g=r,o=r"

- name: "Distributing queryable.pem on Ops Manager host"
  hosts: opsmgr 
  become: yes
  gather_facts: no
  tasks:
    - name: "Moving queryable.pem into /certs"
      copy:
        src="files/ssl/queryable.pem"
        dest="/certs"
        owner=root
        group=root
        mode="u=rw,g=r,o=r"

- name: "Distributing SSL certificates on clients"
  hosts: node1 node2 
  become: yes
  gather_facts: yes
  tasks:
    - name: "Copying client certs"
      copy:
            src="files/ssl/{{ hostvars[inventory_hostname]['ansible_hostname'] }}_client.pem"
            dest="/certs"
            owner=root
            group=root
            mode="u=rw,g=r,o=r"
    - name: "Copying internalAut certs"
      copy:
            src="files/ssl/{{ hostvars[inventory_hostname]['ansible_hostname'] }}_internal.pem"
            dest="/certs"
            owner=root
            group=root
            mode="u=rw,g=r,o=r"

- name: "Distributing SSL certificates on servers"
  hosts: opsmgr node1 node2 backup 
  become: yes
  gather_facts: yes
  tasks:
    - name: "Copying server certs to /certs"
      copy:
            src="files/ssl/{{ hostvars[inventory_hostname]['ansible_hostname'] }}_server.pem"
            dest="/certs"
            owner=root
            group=root
            mode="u=rw,g=r,o=r"

- name: Installing Ops Manager
  hosts: opsmgr
  become: yes
  gather_facts: no
  vars_files:
    - vars/om-install-vars.yaml
  tasks:
    # Install the Application database
    - name: "Installing Application Database"
      include: tasks/install-backing-dbs.yaml
    # Install Ops Manager
    - name: "Installing Ops Manager Server"
      include: tasks/install-om.yaml

- name: "Getting clients ready"
  hosts: node1 node2
  become: yes
  gather_facts: no
  ignore_errors: yes
  vars_files:
    - vars/om-install-vars.yaml
  vars:
    api_key: "{{ lookup('file', './vars/admin_user_api_key.yaml') }}"
  tasks:
    #Install the Automation Agent on all clients
    - name: "Install Automation Agents"
      include: tasks/install-automation-agent.yaml  

- name: "Setting up S3 storage"
  hosts: backup
  become: yes
  gather_facts: no
  ignore_errors: yes
  vars_files:
    - vars/om-install-vars.yaml
  tasks:
    #Install minio and startup
    - name: "Installing minio"
      include: tasks/install-s3.yaml

- name: "Enabling Backup Daemon"
  hosts: opsmgr
  become: yes
  gather_facts: no
  tasks:
    - include: tasks/api-enable-backup-daemon.yaml

- name: "Creating FSStore in Ops Manager"
  hosts: localhost
  become: yes
  gather_facts: no
  vars_files:
    - vars/om-install-vars.yaml
  vars:
    api_key: "{{ lookup('file', './vars/admin_user_api_key.yaml') }}"
  tasks:
    - name: Set Ops Manager URL for http
      set_fact:
        om_url: "http://omserver:8080"
      when: not om_https
    - name: Set Ops Manager URL for https
      set_fact:
        om_url: "https://omserver:8443"
      when: om_https
    - include: tasks/api-create-fs-store.yaml
      when: not mongodb_repo == "mongodb-org-3.4.repo"

- name: "Creating Oplog Store in Ops Manager"
  hosts: localhost
  become: yes
  gather_facts: no
  vars_files:
    - vars/om-install-vars.yaml
  vars:
    api_key: "{{ lookup('file', './vars/admin_user_api_key.yaml') }}"
  tasks:
    - name: Set Ops Manager URL for http
      set_fact:
        om_url: "http://omserver:8080"
      when: not om_https
    - name: Set Ops Manager URL for https
      set_fact:
        om_url: "https://omserver:8443"
      when: om_https
    - include: tasks/api-create-oplog-store.yaml
      when: not mongodb_repo == "mongodb-org-3.4.repo"

- name: "Creating S3 blockstore in Ops Manager"
  hosts: localhost
  become: yes
  gather_facts: no
  vars_files:
    - vars/om-install-vars.yaml
  vars:
    api_key: "{{ lookup('file', './vars/admin_user_api_key.yaml') }}"
  tasks:
    - name: Set Ops Manager URL for http
      set_fact:
        om_url: "http://omserver:8080"
      when: not om_https
    - name: Set Ops Manager URL for https
      set_fact:
        om_url: "https://omserver:8443"
      when: om_https
    - include: tasks/api-create-s3-blockstore.yaml
      when: not mongodb_repo == "mongodb-org-3.4.repo"