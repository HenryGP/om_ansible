---
- name: "Copy mongodb repository files"
  template:
    src="../files/{{mongodb_repo}}"
    dest="/etc/yum.repos.d/{{mongodb_repo}}"
    owner=root
    group=root
    mode="u=rw,g=r,o=r"
- name: "Install legacy mongodb shell (mongo), ignore errors if using mongodb repo >= 6.0"
  yum: name=mongodb-org-shell state=latest
  ignore_errors: true

- name: "Install MongoDB Enterprise dependencies"
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
        - cyrus-sasl
        - cyrus-sasl-gssapi
        - cyrus-sasl-plain
        - krb5-libs
        - libcurl
        - libpcap
        - lm_sensors-libs
        - net-snmp
        - net-snmp-agent-libs
        - openldap
        - openssl
        - rpm-libs
        - tcp_wrappers-libs

- name: "Make sure mongosh is installed"
  yum: name=mongodb-mongosh  state=latest

- name: get automation groupid
  shell: mongosh omserver.omansible.int:27017 --quiet --eval "print(db.getSiblingDB('mmsdbconfig').config.customers.findOne()._id.toString())"
  register: opsmanager_groupid
- debug: var=opsmanager_groupid

- name: "Create Agent key with API call"
  uri:
    url: "{{ om_url }}/api/public/v1.0/groups/{{opsmanager_groupid.stdout_lines[0]}}/agentapikeys?pretty=true"
    validate_certs: no
    method: POST
    #follow_redirects: all
    headers:
      Content-Type: "application/json"
    body_format: json
    body: '{"desc":"Initial API Key"}'
    status_code: 201
    return_content: yes
    user: "{{ public_key }}"
    password: "{{ private_key }}"
  register: agents_apikey

- debug: var=(agents_apikey.content|from_json)['key']

- name: download automation agent
  get_url:
    url: "{{ om_url }}/download/agent/automation/mongodb-mms-automation-agent-manager-latest.x86_64.rhel7.rpm" 
    dest: "/tmp/automation-agent.rpm"
    validate_certs: no

- name: install automation agent
  yum: name=/tmp/automation-agent.rpm state=present

- name: enable Automation Agent service
  service: name=mongodb-mms-automation-agent enabled=yes
  become: yes

- name: update config mmsGroupId
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsGroupId='
    line: 'mmsGroupId={{opsmanager_groupid.stdout_lines[0]}}'

- name: update config mmsApiKey
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsApiKey='
    line: "mmsApiKey={{(agents_apikey.content|from_json)['key']}}"

- name: update config mmsBaseUrl
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^mmsBaseUrl='
    line: 'mmsBaseUrl={{ om_url }}'

- name: Configure trusted MMS certificate parameter
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^sslTrustedMMSServerCertificate='
    line: 'sslTrustedMMSServerCertificate=/certs/ca.pem'
  when: om_https and om_version is version_compare("4.4","<")

- name: Configure trusted MMS certificate parameter
  lineinfile:
    path: /etc/mongodb-mms/automation-agent.config
    regexp: '^httpsCAFile='
    line: 'httpsCAFile=/certs/ca.pem'
  when: om_https and om_version is version_compare("4.4",">=")

- name: setup data directory
  file: path=/data state=directory mode=0755 owner=mongod group=mongod

- name: start agent
  service: name=mongodb-mms-automation-agent state=started
