---
- name: "Download Ops Manager RPM"
  get_url:
    url: "{{om_download_url36}}"
    dest: /tmp/mongodb-mms.rpm
    force_basic_auth: yes
- name: "Install the RPM"
  yum:
    name: /tmp/mongodb-mms.rpm
    state: present
- name: "Enable mongodb-mms service"
  service:
    name: mongodb-mms
    enabled: yes
- name: "Copy configuration files"
  template: 
    src="../files/conf-mms.properties"
    dest="/opt/mongodb/mms/conf/conf-mms.properties"
    owner=root 
    group=root 
    mode="u=rw,g=r,o=r"
- name: "Create directory for head database"
  file: path=/data/head state=directory mode=0755 owner=mongodb-mms group=mongodb-mms
- name: "Create directory for fsstore"
  file: path=/data/fsstore state=directory mode=0755 owner=mongodb-mms group=mongodb-mms
- name: "Start mongodb-mms service"
  service: name=mongodb-mms state=started
  become: yes
- name: "Wait for port 8080 to become available"
  wait_for:
    port: 8080
    delay: 1
- name: "Create initial user"
  uri:
    url: "http://192.168.1.100:8080/api/public/v1.0/unauth/users"
    method: POST
    validate_certs: no
    follow_redirects: all
    headers:
      Content-Type: "application/json"
    body_format: json
    status_code: 201
    body: "{{first_user_api_call}}"
    return_content: yes
  register: api_key
- name: Saving API key for admin user in local server
  local_action: copy content={{api_key.json.apiKey}} dest=/root/admin_user_api_key.yaml
- name: API Key for admin user
  debug: var=api_key.json.apiKey
- name: Moving auxiliary file
  template: 
     src="../files/group.txt"
     dest="/tmp/group.txt"
     owner=root 
     group=root 
     mode="u=rw,g=r,o=r"
- name: "Create initial group"
  shell: 'curl --user "admin:{{api_key.json.apiKey}}" --digest  --header "Accept: application/json"  --header "Content-Type: application/json"  --include  --request POST "http://192.168.1.100:8080/api/public/v1.0/groups?pretty=true" --data @/tmp/group.txt'
#- name: "Create initial group"
#  uri:
#    url: "http://192.168.1.100:8080/api/public/v1.0/groups?pretty=true"
#    method: POST
#    validate_certs: no
#    follow_redirects: all
#    headers:
#      Content-Type: "application/json"
#    body_format: json
#    body: "{{first_group_api_call}}"
#    user: admin
#    password: api_key.json.apiKey
#    force_basic_auth: yes
- name: get automation apikey
  shell: mongo 127.0.0.1:27017 --quiet --eval "print(db.getSiblingDB('mmsdbconfig').config.customers.findOne().k)"
  register: opsmanager_apikey
- name: API Key for agents
  debug: var=opsmanager_apikey.stdout_lines[0]
- name: get automation groupid
  shell: mongo 127.0.0.1:27017 --quiet --eval "print(db.getSiblingDB('mmsdbconfig').config.customers.findOne()._id.str)" 
  register: opsmanager_groupid
- name: Group ID
  debug: var=opsmanager_groupid.stdout_lines[0]
- name: Saving group ID in local server
  local_action: copy content={{opsmanager_groupid.stdout_lines[0]}} dest=/root/group_id.yaml